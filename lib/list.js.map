{
  "version": 3,
  "file": "list.js",
  "sourceRoot": "..",
  "sources": [
    "src/list.coffee"
  ],
  "names": [],
  "mappings": ";AAAA;AAAA,MAAA,CAAA,EAAA,KAAA,EAAA,GAAA;IAAA;;EAAA,KAAA,GAAS,IAAC,CAAA,KAAD,IAAU,OAAA,CAAQ,OAAR;;EACnB,CAAA,GAAS,KAAK,CAAC;;QAET,KAAK,CAAC;IAAZ,MAAA,KAAA,QAAyB,KAAK,CAAC,WAA/B;MAME,WAAa,CAAA,CAAA;;YAOb,CAAA,aAAA,CAAA;QALE,IAAC,CAAA,IAAD,CAAM,QAAN,EAAgB,IAAC,CAAA,MAAjB;MAFW;;MAIb,QAAU,CAAA,CAAA;QACR,MAAM,KAAA,CAAM,mBAAN;MADE;;MAGV,MAAQ,CAAC,IAAD,CAAA;AACN,YAAA,CAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAAA,EAAA;;QAAA,IAAC,CAAA,OAAD,GAAW;QAEX,IAAA,CAAO,IAAC,CAAA,OAAR;UACE,IAAC,CAAA,QAAD,CAAA,CAAW,CAAC,WAAZ,CAAwB,QAAxB;AACA,iBAFF;;QAIA,IAAC,CAAA,QAAD,CAAA,CAAW,CAAC,WAAZ,CAAwB,QAAxB;AACA;QAAA,KAAA,kDAAA;;gBAA6B,IAAA,KAAQ,IAAC,CAAA;;;UACpC,KAAA,GAAQ;AACR;QAFF;eAIA,CAAA,CAAE,IAAC,CAAA,QAAD,CAAA,CAAW,CAAC,GAAZ,CAAgB,KAAhB,CAAF,CAAyB,CAAC,QAA1B,CAAmC,QAAnC;MAZM;;MAcR,MAAQ,CAAC,KAAD,CAAA;QACN,IAAkB,KAAlB;UAAA,IAAC,CAAA,KAAD,GAAS,MAAT;;QACA,IAAC,CAAA,IAAD,CAAM,IAAC,CAAA,QAAD,CAAU,IAAC,CAAA,KAAX,CAAN;QACA,IAAC,CAAA,MAAD,CAAQ,IAAC,CAAA,OAAT;QACA,IAAG,IAAC,CAAA,WAAJ;UACE,IAAA,CAAO,IAAC,CAAA,QAAD,CAAU,SAAV,CAAoB,CAAC,MAA5B;mBACE,IAAC,CAAA,QAAD,CAAU,QAAV,CAAmB,CAAC,KAApB,CAAA,EADF;WADF;;MAJM;;MAQR,QAAU,CAAC,GAAD,CAAA;eACR,IAAC,CAAA,EAAE,CAAC,QAAJ,CAAa,GAAb;MADQ;;MAGV,KAAO,CAAC,CAAD,CAAA;AACL,YAAA;QAAA,IAAA,GAAO,IAAC,CAAA,KAAM,CAAA,CAAA,CAAE,CAAC,CAAC,aAAJ,CAAkB,CAAC,KAAnB,CAAA,CAAA;QACd,IAAC,CAAA,OAAD,CAAS,QAAT,EAAmB,IAAnB;eACA;MAHK;;IAtCT;;mBACE,MAAA,GACE;MAAA,aAAA,EAAe;IAAf;;mBAEF,WAAA,GAAa;;;;;;;IAuCf,MAAM,CAAE,OAAR,GAAkB,KAAK,CAAC;;AA9CxB",
  "sourcesContent": [
    "Spine  = @Spine or require('spine')\n$      = Spine.$\n\nclass Spine.List extends Spine.Controller\n  events:\n    'click .item': 'click'\n\n  selectFirst: false\n\n  constructor: ->\n    super()\n    @bind 'change', @change\n\n  template: ->\n    throw Error 'Override template'\n\n  change: (item) =>\n    @current = item\n\n    unless @current\n      @children().removeClass('active')\n      return\n\n    @children().removeClass('active')\n    for item, idx in @items when item is @current\n      index = idx\n      break\n\n    $(@children().get(index)).addClass('active')\n\n  render: (items) ->\n    @items = items if items\n    @html @template(@items)\n    @change @current\n    if @selectFirst\n      unless @children('.active').length\n        @children(':first').click()\n\n  children: (sel) ->\n    @el.children(sel)\n\n  click: (e) ->\n    item = @items[$(e.currentTarget).index()]\n    @trigger('change', item)\n    true\n\nmodule?.exports = Spine.List\n"
  ]
}