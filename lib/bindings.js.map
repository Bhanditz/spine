{
  "version": 3,
  "file": "bindings.js",
  "sourceRoot": "..",
  "sources": [
    "src/bindings.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "BindingsClass =\n\n  model: 'model'\n\n  bindings: {}\n\n\nclass ValueSetter\n\n  constructor: (@context) ->\n\n  setValue: (element, value, setter) ->\n    if typeof setter is 'string'\n      setter = @context.proxy(@context[setter])\n    setter = setter || (e, v) => @_standardSetter e, v\n    setter element, value\n\n  getValue: (element, getter) ->\n    if typeof getter is 'string'\n      getter = @context.proxy(@context[getter])\n    getter = getter || (e, v) => @_standardGetter e, v\n    getter element\n\n  _standardGetter: (element) ->\n    self = this\n    self[\"_#{element.attr('type')}Get\"]?(element) || element.val()\n\n  _standardSetter: (element, value) ->\n    self = this\n    element.each ->\n      el = $(this)\n      self[\"_#{el.attr('type')}Set\"]?(el, value) || el.val(value)\n\n  _checkboxSet: (element, value) ->\n    if value\n      element.prop('checked', 'checked')\n    else\n      element.prop('checked', '')\n\n  _checkboxGet: (element) ->\n    element.is(':checked')\n\nBindingsInstance =\n\n  getModel: ->\n    @[@modelVar]\n\n  setModel: (model) ->\n    @[@modelVar] = model\n\n  walkBindings: (fn) ->\n    for selector, field of @bindings\n      fn selector, field\n\n  applyBindings: ->\n    @valueSetter = new ValueSetter @\n    @walkBindings (selector, field) =>\n      if not field.direction or field.direction is 'model'\n        @_bindModelToEl @getModel(), field, selector\n      if not field.direction or field.direction is 'element'\n        @_bindElToModel @getModel(), field, selector\n\n  _getField: (value) ->\n    if typeof value is 'string'\n      value\n    else\n      value.field\n\n  _forceModelBindings: (model) ->\n    @walkBindings (selector, field) =>\n      @valueSetter.setValue @$(selector), model[@_getField(field)], field.setter\n\n  changeBindingSource: (model) ->\n    @getModel().unbind 'change'\n    @walkBindings (selector) =>\n      selector = false if selector is 'self'\n      @el.off 'change', selector\n    @setModel model\n    @_forceModelBindings model\n    do @applyBindings\n\n  _bindModelToEl: (model, field, selector) ->\n    self = @\n    selector = false if selector is 'self'\n    @el.on 'change', selector, ->\n      model[self._getField(field)] = self.valueSetter.getValue $(this), field.getter\n\n  _bindElToModel: (model, field, selector) ->\n    model.bind 'change', =>\n      @valueSetter.setValue @$(selector), model[@_getField(field)], field.setter\n\nSpine.Bindings =\n  extended: ->\n    @extend BindingsClass\n    @include BindingsInstance\n"
  ]
}