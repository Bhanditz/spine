{
  "version": 3,
  "file": "ajax.js",
  "sourceRoot": "..",
  "sources": [
    "src/ajax.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "Spine  = @Spine or require('spine')\n$      = Spine.$\nModel  = Spine.Model\nQueue  = $({})\n\nAjax =\n  getURL: (object) ->\n    if object.className?\n      @generateURL(object)\n    else\n      @generateURL(object, encodeURIComponent(object.id))\n\n  getCollectionURL: (object) ->\n    @generateURL(object)\n\n  getScope: (object) ->\n    object.scope?() or object.scope\n\n  getCollection: (object) ->\n    if object.url isnt object.generateURL\n      if typeof object.url is 'function'\n        object.url()\n      else\n        object.url\n    else if object.className?\n      object.className.toLowerCase() + 's'\n\n  generateURL: (object, args...) ->\n    collection = Ajax.getCollection(object) or Ajax.getCollection(object.constructor)\n    scope = Ajax.getScope(object) or Ajax.getScope(object.constructor)\n    args.unshift(collection)\n    args.unshift(scope)\n    # construct and clean url\n    path = args.join('/')\n    path = path.replace /(\\/\\/)/g, \"/\"\n    path = path.replace /^\\/|\\/$/g, \"\"\n    # handle relative urls vs those that use a host\n    if path.indexOf(\"../\") isnt 0\n      Model.host + \"/\" + path\n    else\n      path\n\n  enabled: true\n\n  disable: (callback) ->\n    if @enabled\n      @enabled = false\n      try\n        do callback\n      catch e\n        throw e\n      finally\n        @enabled = true\n    else\n      do callback\n\n  queue: (request) ->\n    if request then Queue.queue(request) else Queue.queue()\n\n  clearQueue: ->\n    @queue []\n\n  config:\n    loadMethod: 'GET'\n    updateMethod: 'PUT'\n    createMethod: 'POST'\n    destroyMethod: 'DELETE'\n\nclass Base\n  defaults:\n    dataType: 'json'\n    processData: false\n    headers: {'X-Requested-With': 'XMLHttpRequest'}\n\n  queue: Ajax.queue\n\n  ajax: (params, defaults) ->\n    $.ajax @ajaxSettings(params, defaults)\n\n  ajaxQueue: (params, defaults, record) ->\n    jqXHR    = null\n    deferred = $.Deferred()\n    promise  = deferred.promise()\n    return promise unless Ajax.enabled\n    settings = @ajaxSettings(params, defaults)\n    # prefer setting if exists else default is to parallelize 'GET' requests\n    parallel = if settings.parallel isnt undefined then settings.parallel else (settings.type is 'GET')\n    request = (next) ->\n      if record?.id?\n        # for existing singleton, model id may have been updated\n        # after request has been queued\n        settings.url ?= Ajax.getURL(record)\n        settings.data?.id = record.id\n      # 2 reasons not to stringify: if already a string, or if intend to have ajax processData\n      if typeof settings.data isnt 'string' and settings.processData isnt true\n        settings.data = JSON.stringify(settings.data)\n      # enable promise callbacks to access the request's settings object\n      resolve = ->\n        deferred.resolve.apply this, [arguments..., settings]\n      reject = ->\n        deferred.reject.apply this, [arguments..., settings]\n      jqXHR = $.ajax(settings)\n      jqXHR.done(resolve)\n      jqXHR.fail(reject)\n      jqXHR.then(next, next)\n      if parallel\n        Queue.dequeue()\n\n    promise.abort = (statusText) ->\n      return jqXHR.abort(statusText) if jqXHR\n      index = $.inArray(request, @queue())\n      @queue().splice(index, 1) if index > -1\n      deferred.rejectWith(\n        settings.context or settings,\n        [promise, statusText, '']\n      )\n      promise\n\n    @queue request\n    promise\n\n  ajaxSettings: (params, defaults) ->\n    $.extend({}, @defaults, defaults, params)\n\nclass Collection extends Base\n  constructor: (@model) -> super()\n\n  find: (id, params, options = {}) ->\n    record = new @model(id: id)\n    @ajaxQueue(\n      params, {\n        type: options.method or Ajax.config.loadMethod\n        url: options.url or Ajax.getURL(record)\n        parallel: options.parallel\n      }\n    ).done(@recordsResponse(options))\n      .fail(@failResponse(options))\n\n  all: (params, options = {}) ->\n    @ajaxQueue(\n      params, {\n        type: options.method or Ajax.config.loadMethod\n        url: options.url or Ajax.getURL(@model)\n        parallel: options.parallel\n      }\n    ).done(@recordsResponse(options))\n      .fail(@failResponse(options))\n\n  fetch: (params = {}, options = {}) ->\n    if id = params.id\n      delete params.id\n      @find(id, params, options).done (record) =>\n        @model.refresh(record, options)\n    else\n      @all(params, options).done (records) =>\n        @model.refresh(records, options)\n\n  # Private\n\n  recordsResponse: (options) =>\n    (data, status, xhr, settings) =>\n      @model.trigger('ajaxSuccess', null, status, xhr, settings)\n      options.done?.call(@model, settings)\n\n  failResponse: (options) =>\n    (xhr, statusText, error, settings) =>\n      @model.trigger('ajaxError', null, xhr, statusText, error, settings)\n      options.fail?.call(@model, settings)\n\nclass Singleton extends Base\n  constructor: (@record) ->\n    super()\n    @model = @record.constructor\n\n  reload: (params, options = {}) ->\n    @ajaxQueue(\n      params, {\n        type: options.method or Ajax.config.loadMethod\n        url: options.url\n        parallel: options.parallel\n      }, @record\n    ).done(@recordResponse(options))\n      .fail(@failResponse(options))\n\n  create: (params, options = {}) ->\n    @ajaxQueue(\n      params, {\n        type: options.method or Ajax.config.createMethod\n        contentType: 'application/json'\n        data: @record.toJSON()\n        url: options.url or Ajax.getCollectionURL(@record)\n        parallel: options.parallel\n      }\n    ).done(@recordResponse(options))\n      .fail(@failResponse(options))\n\n  update: (params, options = {}) ->\n    @ajaxQueue(\n      params, {\n        type: options.method or Ajax.config.updateMethod\n        contentType: 'application/json'\n        data: @record.toJSON()\n        url: options.url\n        parallel: options.parallel\n      }, @record\n    ).done(@recordResponse(options))\n      .fail(@failResponse(options))\n\n  destroy: (params, options = {}) ->\n    @ajaxQueue(\n      params, {\n        type: options.method or Ajax.config.destroyMethod\n        url: options.url\n        parallel: options.parallel\n      }, @record\n    ).done(@recordResponse(options))\n      .fail(@failResponse(options))\n\n  # Private\n\n  recordResponse: (options) =>\n    (data, status, xhr, settings) =>\n      if data? and Object.getOwnPropertyNames(data).length and not @record.destroyed\n        @record.refresh(data, ajax: false)\n      @record.trigger('ajaxSuccess', @record, @model.fromJSON(data), status, xhr, settings)\n      options.done?.call(@record, settings)\n\n  failResponse: (options) =>\n    (xhr, statusText, error, settings) =>\n      switch settings.type\n        when 'POST' then @createFailed()\n        when 'DELETE' then @destroyFailed()\n      @record.trigger('ajaxError', @record, xhr, statusText, error, settings)\n      options.fail?.call(@record, settings)\n\n  createFailed: ->\n    @record.remove(clear: true)\n\n  destroyFailed: ->\n    @record.destroyed = false\n    @record.constructor.refresh(@record)\n\n# Ajax endpoint\nModel.host = ''\n\nGenerateURL =\n  include: (args...) ->\n    args.unshift(encodeURIComponent(@id))\n    Ajax.generateURL(this, args...)\n  extend: (args...) ->\n    Ajax.generateURL(this, args...)\n\nInclude =\n  ajax: -> new Singleton(this)\n\n  generateURL: GenerateURL.include\n\n  url: GenerateURL.include\n\nExtend =\n  ajax: -> new Collection(this)\n\n  generateURL: GenerateURL.extend\n\n  url: GenerateURL.extend\n\nModel.Ajax =\n  extended: ->\n    @fetch @ajaxFetch\n    @change @ajaxChange\n    @extend Extend\n    @include Include\n\n  # Private\n\n  ajaxFetch: ->\n    @ajax().fetch(arguments...)\n\n  ajaxChange: (record, type, options = {}) ->\n    return if options.ajax is false\n    record.ajax()[type]?(options.ajax, options)\n\nModel.Ajax.Methods =\n  extended: ->\n    @extend Extend\n    @include Include\n\n# Globals\nAjax.defaults   = Base::defaults\nAjax.Base       = Base\nAjax.Singleton  = Singleton\nAjax.Collection = Collection\nSpine.Ajax      = Ajax\nmodule?.exports = Ajax\n"
  ]
}